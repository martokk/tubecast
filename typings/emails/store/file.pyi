"""
This type stub file was generated by pyright.
"""

MIMETYPE_UNKNOWN = ...
def fix_content_type(content_type, t=...): # -> str:
    ...

class BaseFile:
    """
    Store base "attachment-file" information.
    """
    def __init__(self, **kwargs) -> None:
        """
        uri and filename are connected properties.
        if no filename set, filename extracted from uri.
        if no uri, but filename set, then uri==filename
        """
        ...

    def as_dict(self, fields=...): # -> dict[Unknown | Literal['uri', 'absolute_url', 'filename', 'data', 'mime_type', 'content_disposition', 'subtype'], Any]:
        ...

    def get_data(self): # -> str | Any | None:
        ...

    def set_data(self, value): # -> None:
        ...

    data = ...
    def get_uri(self): # -> Any | None:
        ...

    def set_uri(self, value): # -> None:
        ...

    uri = ...
    def get_filename(self): # -> str | Any | None:
        ...

    def set_filename(self, value): # -> None:
        ...

    filename = ...
    def get_mime_type(self): # -> str | Any:
        ...

    mime_type = ...
    def get_content_disposition(self): # -> Any | None:
        ...

    def set_content_disposition(self, value): # -> None:
        ...

    content_disposition = ...
    @property
    def is_inline(self): # -> Any | bool:
        ...

    @is_inline.setter
    def is_inline(self, value): # -> None:
        ...

    @property
    def content_id(self): # -> Any | None:
        ...

    @property
    def mime(self): # -> MIMEBase | Any | None:
        ...

    def reset_mime(self): # -> None:
        ...

    def fetch(self): # -> None:
        ...



class LazyHTTPFile(BaseFile):
    def __init__(self, requests_args=..., **kwargs) -> None:
        ...

    def fetch(self): # -> None:
        ...

    def get_data(self): # -> bytes | Literal['']:
        ...

    def set_data(self, v): # -> None:
        ...

    data = ...
    @property
    def mime_type(self): # -> Any:
        ...

    @property
    def headers(self): # -> CaseInsensitiveDict[str]:
        ...
